package dna.nissan.leafscience.view.components {	import dna.nissan.leafscience.view.components.display.Circle;	import graphics.Drawing;	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import flash.display.MovieClip;	import flash.display.Shape;	import flash.display.Sprite;	import flash.text.*;	TweenPlugin.activate([GlowFilterPlugin, BlurFilterPlugin, ColorTransformPlugin, DropShadowFilterPlugin]);	public class PreLoaderMC extends MovieClip {		private var LoaderHolder = new MovieClip();		private var GraphicsHolder = new MovieClip();		private var LowerBar : Sprite = new Sprite();		private var UpperBar : Sprite = new Sprite();		private var UpperBar_SliceMask : Circle;		private var SliceMask_1 : Circle;		private var SliceMask_2 : Circle;		private var SliceMask_3 : Circle;		private var SliceMask_4 : Circle;		private var SliceMask_5 : Circle;		private var loadingTimeline : TimelineMax;		private var NumberFormat : TextFormat = new TextFormat();		private var NumberTextField : TextField;		// private var TextFont:Font = new DS_Digital();		private var CenterCircle : Sprite = new Sprite();		private var BlurCircle : Sprite = new Sprite();		var ADD : String = "add";		var ALPHA : String = "alpha";		var DARKEN : String = "darken";		var DIFFERENCE : String = "difference";		var ERASE : String = "erase";		var HARDLIGHT : String = "hardlight";		var INVERT : String = "invert";		var LAYER : String = "layer";		var LIGHTEN : String = "lighten";		var MULTIPLY : String = "multiply";		var NORMAL : String = "normal";		var OVERLAY : String = "overlay";		var SCREEN : String = "screen";		var SHADER : String = "shader";		var SUBTRACT : String = "subtract";		public var TEST_PERCENT_LOADED : Number = 0;		private var testLoadTimeline : TimelineMax;		private const MAX_SPEED : Number = 3;		var BLEND : String;		public function PreLoaderMC() {			BLEND = OVERLAY;			initDisplay();			show();		}		public function showProgress($PercentLoaded : Number) : void {			var PercentLoaded = $PercentLoaded			//trace("PercentLoaded = " + PercentLoaded)			NumberTextField.text = Math.round(PercentLoaded) + "%";			//trace("TimelineSpeed = " + PercentLoaded / 100 * MAX_SPEED)			loadingTimeline.timeScale = PercentLoaded / 100 * MAX_SPEED;		}		public function destroy() : void {			if (loadingTimeline) {				loadingTimeline.kill()			}			if (testLoadTimeline) {				testLoadTimeline.kill()			}			var selected : MovieClip;			while (this.numChildren) {				selected = this.getChildAt(0) as MovieClip;				this.removeChildAt(0);			}		}		public function hide() : void {			trace("PreloaderView.hide()  ");			TweenMax.to(this, .5, {autoAlpha:0, onComplete:destroy});		}		public function initDisplay() : void {												BlurCircle.graphics.beginFill(0x104564);			BlurCircle.graphics.drawCircle(0, 0, 75);			BlurCircle.alpha = 0.5;			BlurCircle.scaleX = 1;			TweenLite.to(BlurCircle, 1, {blurFilter:{blurX:60, blurY:60}});			TweenLite.to(BlurCircle, 1, {dropShadowFilter:{blurX:20, blurY:20, distance:0, alpha:1}});			CenterCircle.graphics.beginFill(0x001829);			CenterCircle.graphics.drawCircle(0, 0, 50);			CenterCircle.alpha = 1;			CenterCircle.scaleX = 1;			CenterCircle.blendMode = BLEND;			LowerBar.graphics.lineStyle(7, 0xFFFFFF);			LowerBar.blendMode = BLEND;			LowerBar.graphics.drawCircle(0, 0, 55);			UpperBar.graphics.lineStyle(9, 0x003752);			UpperBar.graphics.drawCircle(0, 0, 64);			UpperBar.blendMode = BLEND;			SliceMask_1 = new Circle(0, 40, 60, 0x1F86C4);			SliceMask_1.rotation = 0;			SliceMask_1.blendMode = BLEND;			SliceMask_2 = new Circle(0, 70, 75, 0x1F86C4);			SliceMask_2.rotation = 40;			SliceMask_2.blendMode = BLEND;			SliceMask_3 = new Circle(0, 150, 85, 0x1F86C4);			SliceMask_3.rotation = 100;			SliceMask_3.blendMode = BLEND;			SliceMask_4 = new Circle(0, 20, 85, 0xFFFFFF);			SliceMask_4.rotation = 200;			SliceMask_4.blendMode = BLEND;			TweenLite.to(SliceMask_4, 1, {blurFilter:{blurX:4, blurY:4}});			SliceMask_5 = new Circle(0, 260, 75, 0xFFFFF);			SliceMask_5.rotation = 160;			SliceMask_5.blendMode = BLEND;			TweenLite.to(SliceMask_1, 0, {blurFilter:{blurX:4, blurY:4}});			TweenLite.to(SliceMask_2, 0, {blurFilter:{blurX:4, blurY:4}});			TweenLite.to(SliceMask_3, 0, {blurFilter:{blurX:4, blurY:4}});			TweenLite.to(SliceMask_4, 0, {blurFilter:{blurX:4, blurY:4}});			TweenLite.to(SliceMask_5, 0, {blurFilter:{blurX:2, blurY:2}});			NumberFormat.font = "DSDigital";			NumberFormat.size = 34;			NumberFormat.color = "0xFFFFFF";			NumberFormat.align = "center"			NumberTextField = new TextField();			NumberTextField.autoSize = TextFieldAutoSize.CENTER;			NumberTextField.defaultTextFormat = NumberFormat;			NumberTextField.embedFonts = true;			NumberTextField.selectable = false;			NumberTextField.text = "0%";			addGlow(NumberTextField, 0x2f9ab9, 3, 4, 1)			NumberTextField.x = 0 - NumberTextField.width / 2;			NumberTextField.y = 0 - NumberTextField.height / 2;		}		public function show() : void {			addChild(LoaderHolder);			LoaderHolder.addChild(GraphicsHolder);			GraphicsHolder.addChild(BlurCircle);			GraphicsHolder.addChild(SliceMask_5);			GraphicsHolder.addChild(SliceMask_1);			GraphicsHolder.addChild(SliceMask_4);			GraphicsHolder.addChild(SliceMask_2);			GraphicsHolder.addChild(SliceMask_3);			GraphicsHolder.addChild(CenterCircle);			LowerBar.mask = SliceMask_2;			UpperBar.mask = SliceMask_3;			LoaderHolder.addChild(LowerBar);			GraphicsHolder.addChild(UpperBar);			LoaderHolder.addChild(NumberTextField);			playLoadingSequence();			// /// TO BE REMOVED - FOR TESTING ONLY;			//testLoad();		}		public function playLoadingSequence() : void {			loadingTimeline = new TimelineMax({onComplete:playLoadingSequence});			// loadingTimeline.timeScale = 0;			loadingTimeline.append(new TweenLite(SliceMask_1, 0.8, {rotation:"-360", ease:Linear.easeNone}));			loadingTimeline.append(new TweenLite(SliceMask_2, 0.8, {delay:-0.8, rotation:"-300", ease:Linear.easeNone}));			loadingTimeline.append(new TweenLite(SliceMask_3, 0.8, {delay:-0.8, rotation:"360", ease:Linear.easeNone}));			loadingTimeline.append(new TweenLite(SliceMask_4, 0.8, {delay:-0.8, rotation:"220", ease:Linear.easeNone}));			loadingTimeline.append(new TweenLite(SliceMask_5, 0.8, {delay:-0.8, rotation:"-180", ease:Linear.easeNone}));		}		// ///////////////////////// TESTING ONLY		public function testLoad() : void {			testLoadTimeline = new TimelineMax({onUpdate:TestUpdate, onComplete:destroy});			testLoadTimeline.timeScale = 1;			testLoadTimeline.append(new TweenLite(this, 7, {TEST_PERCENT_LOADED:100, ease:Linear.easeNone}));		}		private function TestUpdate() : void {			showProgress(TEST_PERCENT_LOADED)		}		// ////////////////// TESTING ONLY		private function addGlow($mc, $colour, $blur, $strength, $alpha) {			TweenLite.to($mc, 0, {glowFilter:{color:$colour, blurX:$blur, blurY:$blur, strength:$strength, quality:3, alpha:$alpha}});		}	}}