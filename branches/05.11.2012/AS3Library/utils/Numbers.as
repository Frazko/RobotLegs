package utils{	public dynamic class Numbers	{		public static function test ():void		{			trace ("test");		}		public static function randRange (min:Number, max:Number):Number		{			var randomNum:Number = Math.floor (Math.random () * (max - min + 1)) + min;			return randomNum;		}		private static function makeInRange (val:Number, min:Number, max:Number):Number		{			if (val < min)			{				return min;			}			if (val > max)			{				return max;			}			else			{				return val;			}		}		/*		public static function formatInPounds( pence:int, charsBeforeDeciaml:uint = 0):String{					var pounds:int = Math.floor(pence/100);		var pennies:int = Math.round(pence%100);		var penString:String = pennies.toString();		if (penString.length==1){		penString = "0"+penString;		}		return pounds.toString()+"."+penString;		}		 * 		 */		public static function formatInPounds (pence:uint, numInitialZerosForPounds:uint = 0):String		{			var retString:String = "";			var i:int = 0;			if (pence < 100)			{				var penceString:String;								if (numInitialZerosForPounds > 0)				{					for (i; i < numInitialZerosForPounds; ++i) { retString += "0"; }				}								if (pence == 0)				{					penceString = "00";				}				else if (pence > 0 && pence < 10)				{					penceString = "0" + pence.toString ();				}				else				{					penceString = pence.toString ();				}				if (numInitialZerosForPounds > 0) retString += ".";								retString+= penceString;			}			else			{				var pounds:uint = Math.floor (pence / 100);				var remainingPennies:uint = Math.round (pence % (pounds * 100));				var remainingPenniesString:String;								var numCharsInPounds:uint = String (pounds).length;				var numInitialZerosToAdd:int = numInitialZerosForPounds - numCharsInPounds;								if (numInitialZerosToAdd > 0)				{					for (i; i < numInitialZerosToAdd; ++i) { retString += "0"; }				}				if (remainingPennies == 0)				{					remainingPenniesString = "00";				}				else if (remainingPennies > 0 && remainingPennies < 10)				{					remainingPenniesString = "0" + remainingPennies.toString ();				}				else				{					remainingPenniesString = remainingPennies.toString ();				}				retString += pounds.toString () + "." + remainingPenniesString;			}			return retString;		}	}}